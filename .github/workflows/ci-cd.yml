name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack
        run: corepack enable
        
      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint
        run: |
          yarn workspace balance-api lint
          yarn workspace ethereum-balance-frontend lint

      - name: Build
        run: yarn build

      - name: Run tests
        run: yarn workspace balance-api test

      - name: Archive frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: packages/frontend/dist

  e2e-tests:
    needs: test-and-build
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-jammy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack
        run: corepack enable
        
      - name: Install dependencies
        run: yarn install --immutable

      - name: Build application
        run: yarn build
        
      # Start both services in the background
      - name: Start backend API
        run: yarn workspace balance-api start &
        env:
          NODE_ENV: test
          PORT: 3000
      
      # Wait for backend to be available
      - name: Wait for backend
        run: |
          echo "Waiting for backend to be available..."
          timeout=60
          counter=0
          while ! curl -s http://localhost:3000 > /dev/null; do
            if [ $counter -ge $timeout ]; then
              echo "Backend failed to start within $timeout seconds"
              exit 1
            fi
            echo "Waiting..."
            sleep 2
            counter=$((counter+2))
          done
          echo "Backend is available!"
      
      - name: Start frontend
        run: yarn workspace ethereum-balance-frontend dev &
        env:
          NODE_ENV: test
          VITE_API_URL: http://localhost:3000
      
      # Wait for frontend to be available
      - name: Wait for frontend
        run: |
          echo "Waiting for frontend to be available..."
          timeout=60
          counter=0
          while ! curl -s http://localhost:5173 > /dev/null; do
            if [ $counter -ge $timeout ]; then
              echo "Frontend failed to start within $timeout seconds"
              exit 1
            fi
            echo "Waiting..."
            sleep 2
            counter=$((counter+2))
          done
          echo "Frontend is available!"
          
      - name: Run Playwright tests
        run: yarn test:e2e
        env:
          CI: true

      - name: Upload Playwright test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          
  deploy-netlify:
    needs: [test-and-build, e2e-tests]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: packages/frontend/dist

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=packages/frontend/dist --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
